[{"path":"https://math-mcshane.github.io/autogradeR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Ryan McShane Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://math-mcshane.github.io/autogradeR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ryan P.. McShane. Author, maintainer.","code":""},{"path":"https://math-mcshane.github.io/autogradeR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"McShane R (2025). autogradeR: Make Autograding Easier. R package version 0.0.0.9000, https://github.com/math-mcshane/autogradeR.","code":"@Manual{,   title = {autogradeR: Make Autograding Easier},   author = {Ryan P.A. McShane},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/math-mcshane/autogradeR}, }"},{"path":"https://math-mcshane.github.io/autogradeR/index.html","id":"autograder","dir":"","previous_headings":"","what":"Make Autograding Easier","title":"Make Autograding Easier","text":"R package make autograding easier. time, collection helper functions make unit testing easier. work--progress package; breaking changes expected.","code":""},{"path":"https://math-mcshane.github.io/autogradeR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Make Autograding Easier","text":"can install development version autogradeR GitHub :","code":"# install.packages(\"pak\") pak::pak(\"math-mcshane/autogradeR\")"},{"path":"https://math-mcshane.github.io/autogradeR/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Make Autograding Easier","text":"basic example shows solve common problem:","code":"library(autogradeR) ## XXX FILL IN XXX"},{"path":"https://math-mcshane.github.io/autogradeR/reference/check_for_special_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether specified special functions have been used. — check_for_special_functions","title":"Check whether specified special functions have been used. — check_for_special_functions","text":"generic function check whether specific special functions used special functions include , , , repeat, break, next, return, function, quote, switch, {, (. Check updated list special function names.","code":""},{"path":"https://math-mcshane.github.io/autogradeR/reference/check_for_special_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether specified special functions have been used. — check_for_special_functions","text":"","code":"check_for_special_functions(filename, func_vector)"},{"path":"https://math-mcshane.github.io/autogradeR/reference/check_for_special_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether specified special functions have been used. — check_for_special_functions","text":"filename character string file name func_vector character vector special functions. best just one two functions, especially ","code":""},{"path":"https://math-mcshane.github.io/autogradeR/reference/check_for_special_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether specified special functions have been used. — check_for_special_functions","text":"numeric count violations specified functions","code":""},{"path":"https://math-mcshane.github.io/autogradeR/reference/check_for_special_functions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether specified special functions have been used. — check_for_special_functions","text":"","code":"example_script(\"generic_script\") |>   check_for_special_functions(func_vector = \"for\") #> [1] 0"},{"path":"https://math-mcshane.github.io/autogradeR/reference/dollar_sign_counter.html","id":null,"dir":"Reference","previous_headings":"","what":"Count the number of dollar signs used. — dollar_sign_counter","title":"Count the number of dollar signs used. — dollar_sign_counter","text":"function takes R scripts outputs count dollar sign uses works within function calls, ","code":""},{"path":"https://math-mcshane.github.io/autogradeR/reference/dollar_sign_counter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count the number of dollar signs used. — dollar_sign_counter","text":"","code":"dollar_sign_counter(filename)"},{"path":"https://math-mcshane.github.io/autogradeR/reference/dollar_sign_counter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count the number of dollar signs used. — dollar_sign_counter","text":"filename character string file name","code":""},{"path":"https://math-mcshane.github.io/autogradeR/reference/dollar_sign_counter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count the number of dollar signs used. — dollar_sign_counter","text":"count dollar sign, $, uses, e.g., extract elements list (thus data.frame)","code":""},{"path":"https://math-mcshane.github.io/autogradeR/reference/dollar_sign_counter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count the number of dollar signs used. — dollar_sign_counter","text":"","code":"example_script(\"generic_script\") |>   dollar_sign_counter() #> [1] 0"},{"path":"https://math-mcshane.github.io/autogradeR/reference/example_script.html","id":null,"dir":"Reference","previous_headings":"","what":"Get example script. — example_script","title":"Get example script. — example_script","text":"Get example script.","code":""},{"path":"https://math-mcshane.github.io/autogradeR/reference/example_script.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get example script. — example_script","text":"","code":"example_script(name)"},{"path":"https://math-mcshane.github.io/autogradeR/reference/example_script.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get example script. — example_script","text":"name character string name script","code":""},{"path":"https://math-mcshane.github.io/autogradeR/reference/example_script.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get example script. — example_script","text":"character string contains full file location name","code":""},{"path":"https://math-mcshane.github.io/autogradeR/reference/example_script.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get example script. — example_script","text":"","code":"example_script(\"generic_script\") #> [1] \"/home/runner/work/_temp/Library/autogradeR/examples/generic_script.R\""},{"path":"https://math-mcshane.github.io/autogradeR/reference/file_validation.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a file. — file_validation","title":"Validate a file. — file_validation","text":"Checks whether file exists (error) check whether file R script (warning)","code":""},{"path":"https://math-mcshane.github.io/autogradeR/reference/file_validation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a file. — file_validation","text":"","code":"file_validation(filename)"},{"path":"https://math-mcshane.github.io/autogradeR/reference/file_validation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a file. — file_validation","text":"filename character string file name","code":""},{"path":"https://math-mcshane.github.io/autogradeR/reference/file_validation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate a file. — file_validation","text":"","code":"example_script(\"generic_script\") |>   file_validation()"},{"path":"https://math-mcshane.github.io/autogradeR/reference/get_parsed_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse a script into a tibble. — get_parsed_tibble","title":"Parse a script into a tibble. — get_parsed_tibble","text":"Parses file puts tibble, file validation","code":""},{"path":"https://math-mcshane.github.io/autogradeR/reference/get_parsed_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse a script into a tibble. — get_parsed_tibble","text":"","code":"get_parsed_tibble(filename, file_validation = TRUE)"},{"path":"https://math-mcshane.github.io/autogradeR/reference/get_parsed_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse a script into a tibble. — get_parsed_tibble","text":"filename character string file name file_validation TRUE calls file_validation function (default). FALSE, skips file validation; defaults system validation.","code":""},{"path":"https://math-mcshane.github.io/autogradeR/reference/get_parsed_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse a script into a tibble. — get_parsed_tibble","text":"tibble parsed code operate","code":""},{"path":"https://math-mcshane.github.io/autogradeR/reference/get_parsed_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse a script into a tibble. — get_parsed_tibble","text":"","code":"example_script(\"generic_script\") |>   get_parsed_tibble() #> # A tibble: 120 × 9 #>    line1  col1 line2  col2    id parent token                terminal text       #>    <int> <int> <int> <int> <int>  <int> <chr>                <lgl>    <chr>      #>  1     1     1     1    23     1    -26 COMMENT              TRUE     \"# This i… #>  2     3     1     3    18     6    -26 COMMENT              TRUE     \"# regula… #>  3     4     1     4    26    26      0 expr                 FALSE    \"\"         #>  4     4     1     4    13    12     26 expr                 FALSE    \"\"         #>  5     4     1     4     5     9     12 SYMBOL_PACKAGE       TRUE     \"dplyr\"    #>  6     4     6     4     7    10     12 NS_GET               TRUE     \"::\"       #>  7     4     8     4    13    11     12 SYMBOL_FUNCTION_CALL TRUE     \"select\"   #>  8     4    14     4    14    13     26 '('                  TRUE     \"(\"        #>  9     4    15     4    18    14     16 SYMBOL               TRUE     \"cars\"     #> 10     4    15     4    18    16     26 expr                 FALSE    \"\"         #> # ℹ 110 more rows"},{"path":"https://math-mcshane.github.io/autogradeR/reference/pipe_counter.html","id":null,"dir":"Reference","previous_headings":"","what":"Count base and magrittr pipe usages — pipe_counter","title":"Count base and magrittr pipe usages — pipe_counter","text":"function takes R script outputs tibble pipe counts type always outputs count ","code":""},{"path":"https://math-mcshane.github.io/autogradeR/reference/pipe_counter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count base and magrittr pipe usages — pipe_counter","text":"","code":"pipe_counter(filename)"},{"path":"https://math-mcshane.github.io/autogradeR/reference/pipe_counter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count base and magrittr pipe usages — pipe_counter","text":"filename character string file name","code":""},{"path":"https://math-mcshane.github.io/autogradeR/reference/pipe_counter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count base and magrittr pipe usages — pipe_counter","text":"tibble counts pipe type, |> %>%","code":""},{"path":"https://math-mcshane.github.io/autogradeR/reference/pipe_counter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count base and magrittr pipe usages — pipe_counter","text":"","code":"example_script(\"generic_tidyverse_script\") |>   pipe_counter() #> # A tibble: 2 × 2 #>   pipe      n #>   <chr> <int> #> 1 %>%       2 #> 2 |>        2"},{"path":"https://math-mcshane.github.io/autogradeR/reference/return_checker.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks whether functions call return. — return_checker","title":"Checks whether functions call return. — return_checker","text":"function takes R script outputs vector function names return calls","code":""},{"path":"https://math-mcshane.github.io/autogradeR/reference/return_checker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks whether functions call return. — return_checker","text":"","code":"return_checker(filename)"},{"path":"https://math-mcshane.github.io/autogradeR/reference/return_checker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks whether functions call return. — return_checker","text":"filename character string file name","code":""},{"path":"https://math-mcshane.github.io/autogradeR/reference/return_checker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks whether functions call return. — return_checker","text":"vector functions missing return call","code":""},{"path":"https://math-mcshane.github.io/autogradeR/reference/return_checker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks whether functions call return. — return_checker","text":"","code":"example_script(\"generic_script\") |>   return_checker() #> character(0)"}]
